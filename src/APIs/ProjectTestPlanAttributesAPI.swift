//
// ProjectTestPlanAttributesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class ProjectTestPlanAttributesAPI {

    /**
     Add attributes to project's test plans
     
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - parameter requestBody: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    internal class func createCustomAttributeTestPlanProjectRelations(projectId: String, requestBody: Set<UUID>? = nil, apiResponseQueue: DispatchQueue = ruTestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return createCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: projectId, requestBody: requestBody).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Add attributes to project's test plans
     - POST /api/v2/projects/{projectId}/testPlans/attributes
     -  Use case   User sets project internal or global identifier and attributes identifiers   User runs method execution   System updates project and add attributes to project for test plans   System returns no content response
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - parameter requestBody: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    internal class func createCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: String, requestBody: Set<UUID>? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v2/projects/{projectId}/testPlans/attributes"
        let projectIdPreEscape = "\(APIHelper.mapValueToPathItem(projectId))"
        let projectIdPostEscape = projectIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{projectId}", with: projectIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ruTestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = ruTestitApiClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete attribute from project's test plans
     
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - parameter attributeId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    internal class func deleteCustomAttributeTestPlanProjectRelations(projectId: String, attributeId: UUID, apiResponseQueue: DispatchQueue = ruTestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return deleteCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: projectId, attributeId: attributeId).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete attribute from project's test plans
     - DELETE /api/v2/projects/{projectId}/testPlans/attributes/{attributeId}
     -  Use case   User sets project internal or global identifier and attribute identifier   User runs method execution   System updates project and delete attribute from project for test plans   System returns no content response
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - parameter attributeId: (path)  
     - returns: RequestBuilder<Void> 
     */
    internal class func deleteCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: String, attributeId: UUID) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v2/projects/{projectId}/testPlans/attributes/{attributeId}"
        let projectIdPreEscape = "\(APIHelper.mapValueToPathItem(projectId))"
        let projectIdPostEscape = projectIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{projectId}", with: projectIdPostEscape, options: .literal, range: nil)
        let attributeIdPreEscape = "\(APIHelper.mapValueToPathItem(attributeId))"
        let attributeIdPostEscape = attributeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{attributeId}", with: attributeIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ruTestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = ruTestitApiClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get project's test plan attributes
     
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    internal class func getCustomAttributeTestPlanProjectRelations(projectId: String, apiResponseQueue: DispatchQueue = ruTestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: [CustomAttributeModel]?, _ error: Error?) -> Void)) -> RequestTask {
        return getCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: projectId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get project's test plan attributes
     - GET /api/v2/projects/{projectId}/testPlans/attributes
     -  Use case   User runs method execution   System returns project for test plans attributes by project identifier
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - returns: RequestBuilder<[CustomAttributeModel]> 
     */
    internal class func getCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: String) -> RequestBuilder<[CustomAttributeModel]> {
        var localVariablePath = "/api/v2/projects/{projectId}/testPlans/attributes"
        let projectIdPreEscape = "\(APIHelper.mapValueToPathItem(projectId))"
        let projectIdPostEscape = projectIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{projectId}", with: projectIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ruTestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[CustomAttributeModel]>.Type = ruTestitApiClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Search for attributes used in the project test plans
     
     - parameter projectId: (path) Unique or global project ID 
     - parameter skip: (query) Amount of items to be skipped (offset) (optional)
     - parameter take: (query) Amount of items to be taken (limit) (optional)
     - parameter orderBy: (query) SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC) (optional)
     - parameter searchField: (query) Property name for searching (optional)
     - parameter searchValue: (query) Value for searching (optional)
     - parameter projectAttributesFilterModel: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    internal class func searchTestPlanAttributesInProject(projectId: String, skip: Int? = nil, take: Int? = nil, orderBy: String? = nil, searchField: String? = nil, searchValue: String? = nil, projectAttributesFilterModel: ProjectAttributesFilterModel? = nil, apiResponseQueue: DispatchQueue = ruTestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: [CustomAttributeGetModel]?, _ error: Error?) -> Void)) -> RequestTask {
        return searchTestPlanAttributesInProjectWithRequestBuilder(projectId: projectId, skip: skip, take: take, orderBy: orderBy, searchField: searchField, searchValue: searchValue, projectAttributesFilterModel: projectAttributesFilterModel).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Search for attributes used in the project test plans
     - POST /api/v2/projects/{projectId}/testPlans/attributes/search
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - responseHeaders: [Pagination-Skip(Int), Pagination-Take(Int), Pagination-Pages(Int), Pagination-Total-Items(Int)]
     - parameter projectId: (path) Unique or global project ID 
     - parameter skip: (query) Amount of items to be skipped (offset) (optional)
     - parameter take: (query) Amount of items to be taken (limit) (optional)
     - parameter orderBy: (query) SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC) (optional)
     - parameter searchField: (query) Property name for searching (optional)
     - parameter searchValue: (query) Value for searching (optional)
     - parameter projectAttributesFilterModel: (body)  (optional)
     - returns: RequestBuilder<[CustomAttributeGetModel]> 
     */
    internal class func searchTestPlanAttributesInProjectWithRequestBuilder(projectId: String, skip: Int? = nil, take: Int? = nil, orderBy: String? = nil, searchField: String? = nil, searchValue: String? = nil, projectAttributesFilterModel: ProjectAttributesFilterModel? = nil) -> RequestBuilder<[CustomAttributeGetModel]> {
        var localVariablePath = "/api/v2/projects/{projectId}/testPlans/attributes/search"
        let projectIdPreEscape = "\(APIHelper.mapValueToPathItem(projectId))"
        let projectIdPostEscape = projectIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{projectId}", with: projectIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ruTestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: projectAttributesFilterModel)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "Skip": (wrappedValue: skip?.encodeToJSON(), isExplode: true),
            "Take": (wrappedValue: take?.encodeToJSON(), isExplode: true),
            "OrderBy": (wrappedValue: orderBy?.encodeToJSON(), isExplode: true),
            "SearchField": (wrappedValue: searchField?.encodeToJSON(), isExplode: true),
            "SearchValue": (wrappedValue: searchValue?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[CustomAttributeGetModel]>.Type = ruTestitApiClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update attribute of project's test plans
     
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - parameter customAttributeTestPlanProjectRelationPutModel: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    internal class func updateCustomAttributeTestPlanProjectRelations(projectId: String, customAttributeTestPlanProjectRelationPutModel: CustomAttributeTestPlanProjectRelationPutModel? = nil, apiResponseQueue: DispatchQueue = ruTestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return updateCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: projectId, customAttributeTestPlanProjectRelationPutModel: customAttributeTestPlanProjectRelationPutModel).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update attribute of project's test plans
     - PUT /api/v2/projects/{projectId}/testPlans/attributes
     -  Use case   User sets project internal or global identifier and attribute model   User runs method execution   System updates project and project attribute for test plan   System returns no content response
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter projectId: (path) Project internal (UUID) or global (integer) identifier 
     - parameter customAttributeTestPlanProjectRelationPutModel: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    internal class func updateCustomAttributeTestPlanProjectRelationsWithRequestBuilder(projectId: String, customAttributeTestPlanProjectRelationPutModel: CustomAttributeTestPlanProjectRelationPutModel? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v2/projects/{projectId}/testPlans/attributes"
        let projectIdPreEscape = "\(APIHelper.mapValueToPathItem(projectId))"
        let projectIdPostEscape = projectIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{projectId}", with: projectIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ruTestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: customAttributeTestPlanProjectRelationPutModel)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = ruTestitApiClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
