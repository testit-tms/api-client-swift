//
// UpdateAutoTestResultReasonProjectApiModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UpdateAutoTestResultReasonProjectApiModel: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** Failure category identifier */
    public var id: UUID
    /** Failure category name */
    public var name: String
    /** Category type */
    public var failureCategory: FailureCategory
    /** Failure category regexes */
    public var failureClassRegexes: [UpdateFailureClassRegexApiModel]?
    /** Projects identifiers */
    public var projectIds: [UUID]?

    public init(id: UUID, name: String, failureCategory: FailureCategory, failureClassRegexes: [UpdateFailureClassRegexApiModel]? = nil, projectIds: [UUID]? = nil) {
        self.id = id
        self.name = name
        self.failureCategory = failureCategory
        self.failureClassRegexes = failureClassRegexes
        self.projectIds = projectIds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case failureCategory
        case failureClassRegexes
        case projectIds
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(failureCategory, forKey: .failureCategory)
        try container.encodeIfPresent(failureClassRegexes, forKey: .failureClassRegexes)
        try container.encodeIfPresent(projectIds, forKey: .projectIds)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension UpdateAutoTestResultReasonProjectApiModel: Identifiable {}
