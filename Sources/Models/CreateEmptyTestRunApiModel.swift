//
// CreateEmptyTestRunApiModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateEmptyTestRunApiModel: Codable, JSONEncodable, Hashable {

    /** Project unique identifier              This property is to link test run with a project */
    public var projectId: UUID
    /** Test run name */
    public var name: String?
    /** Test run description */
    public var description: String?
    /** Test run launch source */
    public var launchSource: String?
    /** Collection of attachments to relate to the test run */
    public var attachments: [AssignAttachmentApiModel]?
    /** Collection of links to relate to the test run */
    public var links: [CreateLinkApiModel]?

    public init(projectId: UUID, name: String? = nil, description: String? = nil, launchSource: String? = nil, attachments: [AssignAttachmentApiModel]? = nil, links: [CreateLinkApiModel]? = nil) {
        self.projectId = projectId
        self.name = name
        self.description = description
        self.launchSource = launchSource
        self.attachments = attachments
        self.links = links
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case projectId
        case name
        case description
        case launchSource
        case attachments
        case links
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(projectId, forKey: .projectId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(launchSource, forKey: .launchSource)
        try container.encodeIfPresent(attachments, forKey: .attachments)
        try container.encodeIfPresent(links, forKey: .links)
    }
}

