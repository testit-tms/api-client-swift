//
// AutoTestProjectSettingsPostModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AutoTestProjectSettingsPostModel: Codable, JSONEncodable, Hashable {

    public static let flakyStabilityPercentageRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 100, exclusiveMaximum: false, multipleOf: nil)
    public static let flakyTestRunCountRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 1000, exclusiveMaximum: false, multipleOf: nil)
    public static let rerunAttemptsCountRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 10, exclusiveMaximum: false, multipleOf: nil)
    /** Indicates if the status \"Flaky/Stable\" sets automatically */
    public var isFlakyAuto: Bool? = false
    /** Stability percentage for autotest flaky computing */
    public var flakyStabilityPercentage: Int? = 100
    /** Last test run count for autotest flaky computing */
    public var flakyTestRunCount: Int? = 100
    /** Auto rerun enabled */
    public var rerunEnabled: Bool
    /** Auto rerun attempt count */
    public var rerunAttemptsCount: Int

    public init(isFlakyAuto: Bool? = false, flakyStabilityPercentage: Int? = 100, flakyTestRunCount: Int? = 100, rerunEnabled: Bool, rerunAttemptsCount: Int) {
        self.isFlakyAuto = isFlakyAuto
        self.flakyStabilityPercentage = flakyStabilityPercentage
        self.flakyTestRunCount = flakyTestRunCount
        self.rerunEnabled = rerunEnabled
        self.rerunAttemptsCount = rerunAttemptsCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case isFlakyAuto
        case flakyStabilityPercentage
        case flakyTestRunCount
        case rerunEnabled
        case rerunAttemptsCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(isFlakyAuto, forKey: .isFlakyAuto)
        try container.encodeIfPresent(flakyStabilityPercentage, forKey: .flakyStabilityPercentage)
        try container.encodeIfPresent(flakyTestRunCount, forKey: .flakyTestRunCount)
        try container.encode(rerunEnabled, forKey: .rerunEnabled)
        try container.encode(rerunAttemptsCount, forKey: .rerunAttemptsCount)
    }
}

