//
// StepModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct StepModel: Codable, JSONEncodable, Hashable {

    /** Nested shared steps are allowed */
    internal var workItem: SharedStepModel?
    internal var id: UUID
    internal var action: String?
    internal var expected: String?
    internal var testData: String?
    internal var comments: String?
    internal var workItemId: UUID?

    internal init(workItem: SharedStepModel? = nil, id: UUID, action: String? = nil, expected: String? = nil, testData: String? = nil, comments: String? = nil, workItemId: UUID? = nil) {
        self.workItem = workItem
        self.id = id
        self.action = action
        self.expected = expected
        self.testData = testData
        self.comments = comments
        self.workItemId = workItemId
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case workItem
        case id
        case action
        case expected
        case testData
        case comments
        case workItemId
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(workItem, forKey: .workItem)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(action, forKey: .action)
        try container.encodeIfPresent(expected, forKey: .expected)
        try container.encodeIfPresent(testData, forKey: .testData)
        try container.encodeIfPresent(comments, forKey: .comments)
        try container.encodeIfPresent(workItemId, forKey: .workItemId)
    }
}

