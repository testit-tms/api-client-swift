//
// AttachmentsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AttachmentsAPI {

    /**
     Delete attachment file
     
     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV2AttachmentsIdDelete(id: UUID, apiResponseQueue: DispatchQueue = TestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV2AttachmentsIdDeleteWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete attachment file
     - DELETE /api/v2/attachments/{id}
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter id: (path)  
     - returns: RequestBuilder<Void> 
     */
    open class func apiV2AttachmentsIdDeleteWithRequestBuilder(id: UUID) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v2/attachments/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = TestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = TestitApiClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Download attachment file
     
     - parameter id: (path)  
     - parameter width: (query) Width of the result image (optional)
     - parameter height: (query) Height of the result image (optional)
     - parameter resizeType: (query) Type of resizing to apply to the result image (optional)
     - parameter backgroundColor: (query) Color of the background if the &#x60;resizeType&#x60; is &#x60;AddBackgroundStripes&#x60; (optional)
     - parameter preview: (query) If image must be converted to a preview (lower quality, no animation) (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV2AttachmentsIdGet(id: UUID, width: Int? = nil, height: Int? = nil, resizeType: ImageResizeType? = nil, backgroundColor: String? = nil, preview: Bool? = nil, apiResponseQueue: DispatchQueue = TestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV2AttachmentsIdGetWithRequestBuilder(id: id, width: width, height: height, resizeType: resizeType, backgroundColor: backgroundColor, preview: preview).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Download attachment file
     - GET /api/v2/attachments/{id}
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter id: (path)  
     - parameter width: (query) Width of the result image (optional)
     - parameter height: (query) Height of the result image (optional)
     - parameter resizeType: (query) Type of resizing to apply to the result image (optional)
     - parameter backgroundColor: (query) Color of the background if the &#x60;resizeType&#x60; is &#x60;AddBackgroundStripes&#x60; (optional)
     - parameter preview: (query) If image must be converted to a preview (lower quality, no animation) (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func apiV2AttachmentsIdGetWithRequestBuilder(id: UUID, width: Int? = nil, height: Int? = nil, resizeType: ImageResizeType? = nil, backgroundColor: String? = nil, preview: Bool? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v2/attachments/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = TestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "width": (wrappedValue: width?.encodeToJSON(), isExplode: true),
            "height": (wrappedValue: height?.encodeToJSON(), isExplode: true),
            "resizeType": (wrappedValue: resizeType?.encodeToJSON(), isExplode: true),
            "backgroundColor": (wrappedValue: backgroundColor?.encodeToJSON(), isExplode: true),
            "preview": (wrappedValue: preview?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = TestitApiClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get attachment metadata
     
     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV2AttachmentsIdMetadataGet(id: UUID, apiResponseQueue: DispatchQueue = TestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: AttachmentModel?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV2AttachmentsIdMetadataGetWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get attachment metadata
     - GET /api/v2/attachments/{id}/metadata
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter id: (path)  
     - returns: RequestBuilder<AttachmentModel> 
     */
    open class func apiV2AttachmentsIdMetadataGetWithRequestBuilder(id: UUID) -> RequestBuilder<AttachmentModel> {
        var localVariablePath = "/api/v2/attachments/{id}/metadata"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = TestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AttachmentModel>.Type = TestitApiClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get size of attachments storage in bytes
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV2AttachmentsOccupiedFileStorageSizeGet(apiResponseQueue: DispatchQueue = TestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: Int64?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV2AttachmentsOccupiedFileStorageSizeGetWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get size of attachments storage in bytes
     - GET /api/v2/attachments/occupiedFileStorageSize
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - returns: RequestBuilder<Int64> 
     */
    open class func apiV2AttachmentsOccupiedFileStorageSizeGetWithRequestBuilder() -> RequestBuilder<Int64> {
        let localVariablePath = "/api/v2/attachments/occupiedFileStorageSize"
        let localVariableURLString = TestitApiClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Int64>.Type = TestitApiClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Upload new attachment file
     
     - parameter file: (form)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV2AttachmentsPost(file: URL? = nil, apiResponseQueue: DispatchQueue = TestitApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: AttachmentModel?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV2AttachmentsPostWithRequestBuilder(file: file).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Upload new attachment file
     - POST /api/v2/attachments
     - File size is restricted to 50 MB (52 428 800 bytes)
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Bearer or PrivateToken
     - parameter file: (form)  (optional)
     - returns: RequestBuilder<AttachmentModel> 
     */
    open class func apiV2AttachmentsPostWithRequestBuilder(file: URL? = nil) -> RequestBuilder<AttachmentModel> {
        let localVariablePath = "/api/v2/attachments"
        let localVariableURLString = TestitApiClientAPI.basePath + localVariablePath
        let localVariableFormParams: [String: Any?] = [
            "file": file?.encodeToJSON(),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "multipart/form-data",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AttachmentModel>.Type = TestitApiClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
