//
// TestResultShortModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TestResultShortModel: Codable, JSONEncodable, Hashable {

    public var id: UUID
    public var outcome: String
    public var traces: String?
    public var failureType: String
    public var message: String?
    public var testPoint: TestPointPutModel?
    public var createdDate: Date?
    public var autoTest: AutoTestShortModel?
    public var attachments: [AttachmentModel]?

    public init(id: UUID, outcome: String, traces: String? = nil, failureType: String, message: String? = nil, testPoint: TestPointPutModel? = nil, createdDate: Date? = nil, autoTest: AutoTestShortModel? = nil, attachments: [AttachmentModel]? = nil) {
        self.id = id
        self.outcome = outcome
        self.traces = traces
        self.failureType = failureType
        self.message = message
        self.testPoint = testPoint
        self.createdDate = createdDate
        self.autoTest = autoTest
        self.attachments = attachments
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case outcome
        case traces
        case failureType
        case message
        case testPoint
        case createdDate
        case autoTest
        case attachments
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(outcome, forKey: .outcome)
        try container.encodeIfPresent(traces, forKey: .traces)
        try container.encode(failureType, forKey: .failureType)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(testPoint, forKey: .testPoint)
        try container.encodeIfPresent(createdDate, forKey: .createdDate)
        try container.encodeIfPresent(autoTest, forKey: .autoTest)
        try container.encodeIfPresent(attachments, forKey: .attachments)
    }
}

