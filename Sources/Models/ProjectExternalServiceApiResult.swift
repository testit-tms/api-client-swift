//
// ProjectExternalServiceApiResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProjectExternalServiceApiResult: Codable, JSONEncodable, Hashable {

    /** The unique ID of the external service */
    public var id: UUID
    /** The name of the external service */
    public var name: String
    /** The metadata associated with the external service */
    public var metadata: ExternalServiceMetadataApiResult
    /** Indicates whether the external service is enabled or not */
    public var enabled: Bool

    public init(id: UUID, name: String, metadata: ExternalServiceMetadataApiResult, enabled: Bool) {
        self.id = id
        self.name = name
        self.metadata = metadata
        self.enabled = enabled
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case metadata
        case enabled
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(metadata, forKey: .metadata)
        try container.encode(enabled, forKey: .enabled)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ProjectExternalServiceApiResult: Identifiable {}
