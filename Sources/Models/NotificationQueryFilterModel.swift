//
// NotificationQueryFilterModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NotificationQueryFilterModel: Codable, JSONEncodable, Hashable {

    static let typesRule = ArrayRule(minItems: nil, maxItems: nil, uniqueItems: true)
    public var types: Set<NotificationTypeModel>?
    public var isRead: Bool?
    public var createdDate: DateTimeRangeSelectorModel?

    public init(types: Set<NotificationTypeModel>? = nil, isRead: Bool? = nil, createdDate: DateTimeRangeSelectorModel? = nil) {
        self.types = types
        self.isRead = isRead
        self.createdDate = createdDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case types
        case isRead
        case createdDate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(types, forKey: .types)
        try container.encodeIfPresent(isRead, forKey: .isRead)
        try container.encodeIfPresent(createdDate, forKey: .createdDate)
    }
}

