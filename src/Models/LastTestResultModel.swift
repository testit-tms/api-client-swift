//
// LastTestResultModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct LastTestResultModel: Codable, JSONEncodable, Hashable {

    internal var id: UUID
    internal var testRunId: UUID
    internal var autoTestId: UUID?
    internal var comment: String?
    internal var links: [LinkModel]?
    internal var workItemVersionId: UUID
    internal var attachments: [AttachmentModel]?

    internal init(id: UUID, testRunId: UUID, autoTestId: UUID? = nil, comment: String? = nil, links: [LinkModel]? = nil, workItemVersionId: UUID, attachments: [AttachmentModel]? = nil) {
        self.id = id
        self.testRunId = testRunId
        self.autoTestId = autoTestId
        self.comment = comment
        self.links = links
        self.workItemVersionId = workItemVersionId
        self.attachments = attachments
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case testRunId
        case autoTestId
        case comment
        case links
        case workItemVersionId
        case attachments
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(testRunId, forKey: .testRunId)
        try container.encodeIfPresent(autoTestId, forKey: .autoTestId)
        try container.encodeIfPresent(comment, forKey: .comment)
        try container.encodeIfPresent(links, forKey: .links)
        try container.encode(workItemVersionId, forKey: .workItemVersionId)
        try container.encodeIfPresent(attachments, forKey: .attachments)
    }
}

