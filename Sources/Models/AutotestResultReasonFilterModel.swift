//
// AutotestResultReasonFilterModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AutotestResultReasonFilterModel: Codable, JSONEncodable, Hashable {

    public static let failureCategoriesRule = ArrayRule(minItems: nil, maxItems: nil, uniqueItems: true)
    public static let nameRule = StringRule(minLength: 0, maxLength: 255, pattern: nil)
    public var failureCategories: Set<AvailableFailureCategory>?
    public var name: String?
    public var regexCount: Int32RangeSelectorModel?
    public var isDeleted: Bool?

    public init(failureCategories: Set<AvailableFailureCategory>? = nil, name: String? = nil, regexCount: Int32RangeSelectorModel? = nil, isDeleted: Bool? = nil) {
        self.failureCategories = failureCategories
        self.name = name
        self.regexCount = regexCount
        self.isDeleted = isDeleted
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case failureCategories
        case name
        case regexCount
        case isDeleted
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(failureCategories, forKey: .failureCategories)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(regexCount, forKey: .regexCount)
        try container.encodeIfPresent(isDeleted, forKey: .isDeleted)
    }
}

