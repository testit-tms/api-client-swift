//
// GlobalCustomAttributeUpdateModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct GlobalCustomAttributeUpdateModel: Codable, JSONEncodable, Hashable {

    static let nameRule = StringRule(minLength: 0, maxLength: 255, pattern: nil)
    /** Name of attribute */
    internal var name: String
    /** Collection of attribute options     Available for attributes of type `options` and `multiple options` only */
    internal var options: [CustomAttributeOptionModel]?
    /** Indicates whether the attribute is available */
    internal var isEnabled: Bool?
    /** Indicates whether the attribute value is mandatory to specify */
    internal var isRequired: Bool?

    internal init(name: String, options: [CustomAttributeOptionModel]? = nil, isEnabled: Bool? = nil, isRequired: Bool? = nil) {
        self.name = name
        self.options = options
        self.isEnabled = isEnabled
        self.isRequired = isRequired
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case options
        case isEnabled
        case isRequired
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(options, forKey: .options)
        try container.encodeIfPresent(isEnabled, forKey: .isEnabled)
        try container.encodeIfPresent(isRequired, forKey: .isRequired)
    }
}

