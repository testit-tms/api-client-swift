//
// TestRunShortGetModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TestRunShortGetModel: Codable, JSONEncodable, Hashable {

    /** Unique ID of the test run */
    public var id: UUID
    /** Name of the test run */
    public var name: String
    /** Current state of the test run */
    public var state: TestRunState
    /** Date when the test run was created */
    public var createdDate: Date
    /** Date when the test run was started */
    public var startedDate: Date?
    /** Completion date of the test run */
    public var completedDate: Date?
    /** Unique ID of user who created the test run */
    public var createdById: UUID
    /** Unique ID of user who modified the test run last time */
    public var modifiedById: UUID?
    /** Is the test run is deleted */
    public var isDeleted: Bool
    /** Number of AutoTests run in the test run */
    public var autoTestsCount: Int
    /** Statistics of the test run */
    public var statistics: TestResultsStatisticsGetModel

    public init(id: UUID, name: String, state: TestRunState, createdDate: Date, startedDate: Date? = nil, completedDate: Date? = nil, createdById: UUID, modifiedById: UUID? = nil, isDeleted: Bool, autoTestsCount: Int, statistics: TestResultsStatisticsGetModel) {
        self.id = id
        self.name = name
        self.state = state
        self.createdDate = createdDate
        self.startedDate = startedDate
        self.completedDate = completedDate
        self.createdById = createdById
        self.modifiedById = modifiedById
        self.isDeleted = isDeleted
        self.autoTestsCount = autoTestsCount
        self.statistics = statistics
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case state
        case createdDate
        case startedDate
        case completedDate
        case createdById
        case modifiedById
        case isDeleted
        case autoTestsCount
        case statistics
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(state, forKey: .state)
        try container.encode(createdDate, forKey: .createdDate)
        try container.encodeIfPresent(startedDate, forKey: .startedDate)
        try container.encodeIfPresent(completedDate, forKey: .completedDate)
        try container.encode(createdById, forKey: .createdById)
        try container.encodeIfPresent(modifiedById, forKey: .modifiedById)
        try container.encode(isDeleted, forKey: .isDeleted)
        try container.encode(autoTestsCount, forKey: .autoTestsCount)
        try container.encode(statistics, forKey: .statistics)
    }
}

