//
// TestSuiteV2PostModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TestSuiteV2PostModel: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: 0, maxLength: 255, pattern: nil)
    /** Unique ID of the parent test suite in hierarchy */
    public var parentId: UUID?
    /** Unique ID of test plan to which the test suite belongs */
    public var testPlanId: UUID
    /** Name of the test suite */
    public var name: String
    /** Type of the test suite */
    public var type: TestSuiteType?
    /** Indicates if the test suite retains section tree structure */
    public var saveStructure: Bool?
    /** Indicates if scheduled auto refresh is enabled for the test suite */
    public var autoRefresh: Bool?

    public init(parentId: UUID? = nil, testPlanId: UUID, name: String, type: TestSuiteType? = nil, saveStructure: Bool? = nil, autoRefresh: Bool? = nil) {
        self.parentId = parentId
        self.testPlanId = testPlanId
        self.name = name
        self.type = type
        self.saveStructure = saveStructure
        self.autoRefresh = autoRefresh
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case parentId
        case testPlanId
        case name
        case type
        case saveStructure
        case autoRefresh
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(parentId, forKey: .parentId)
        try container.encode(testPlanId, forKey: .testPlanId)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(saveStructure, forKey: .saveStructure)
        try container.encodeIfPresent(autoRefresh, forKey: .autoRefresh)
    }
}

