//
// ProjectPutModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct ProjectPutModel: Codable, JSONEncodable, Hashable {

    static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** Unique ID of the project */
    internal var id: UUID
    /** Description of the project */
    internal var description: String?
    /** Name of the project */
    internal var name: String
    /** Indicates if the project is marked as favorite */
    internal var isFavorite: Bool?
    /** Indicates if the status \"Flaky/Stable\" sets automatically */
    internal var isFlakyAuto: Bool?
    /** Type of the project */
    internal var type: ProjectTypeModel

    internal init(id: UUID, description: String? = nil, name: String, isFavorite: Bool? = nil, isFlakyAuto: Bool? = nil, type: ProjectTypeModel) {
        self.id = id
        self.description = description
        self.name = name
        self.isFavorite = isFavorite
        self.isFlakyAuto = isFlakyAuto
        self.type = type
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case description
        case name
        case isFavorite
        case isFlakyAuto
        case type
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(isFavorite, forKey: .isFavorite)
        try container.encodeIfPresent(isFlakyAuto, forKey: .isFlakyAuto)
        try container.encode(type, forKey: .type)
    }
}

