//
// AutoTestResultsForTestRunModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct AutoTestResultsForTestRunModel: Codable, JSONEncodable, Hashable {

    static let autoTestExternalIdRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let durationRule = NumericRule<Int64>(minimum: 0, exclusiveMinimum: false, maximum: 43200000000, exclusiveMaximum: false, multipleOf: nil)
    /** Specifies the GUID of the autotest configuration, which was specified when the test run was created. */
    internal var configurationId: UUID
    /** Specifies the links in the autotest. */
    internal var links: [LinkPostModel]?
    /** Specifies the cause of autotest failure. */
    internal var failureReasonNames: [FailureCategoryModel]?
    /** Specifies the external ID of the autotest, which was specified when the test run was created. */
    internal var autoTestExternalId: String
    /** Specifies the result of the autotest execution. */
    internal var outcome: AvailableTestResultOutcome
    /** A comment for the result. */
    internal var message: String?
    /** An extended comment or a stack trace. */
    internal var traces: String?
    /** Test run start date. */
    internal var startedOn: Date?
    /** Test run end date. */
    internal var completedOn: Date?
    /** Expected or actual duration of the test run execution in milliseconds. */
    internal var duration: Int64?
    /** Specifies an attachment GUID. Multiple values can be sent. */
    internal var attachments: [AttachmentPutModel]?
    /** \"<b>parameter</b>\": \"<b>value</b>\" pair with arbitrary custom parameters. Multiple parameters can be sent. */
    internal var parameters: [String: String]?
    /** \"<b>property</b>\": \"<b>value</b>\" pair with arbitrary custom properties. Multiple properties can be sent. */
    internal var properties: [String: String]?
    /** Specifies the results of individual steps. */
    internal var stepResults: [AttachmentPutModelAutoTestStepResultsModel]?
    /** Specifies the results of setup steps. For information on supported values, see the `stepResults` parameter above. */
    internal var setupResults: [AttachmentPutModelAutoTestStepResultsModel]?
    /** Specifies the results of the teardown steps. For information on supported values, see the `stepResults` parameter above. */
    internal var teardownResults: [AttachmentPutModelAutoTestStepResultsModel]?

    internal init(configurationId: UUID, links: [LinkPostModel]? = nil, failureReasonNames: [FailureCategoryModel]? = nil, autoTestExternalId: String, outcome: AvailableTestResultOutcome, message: String? = nil, traces: String? = nil, startedOn: Date? = nil, completedOn: Date? = nil, duration: Int64? = nil, attachments: [AttachmentPutModel]? = nil, parameters: [String: String]? = nil, properties: [String: String]? = nil, stepResults: [AttachmentPutModelAutoTestStepResultsModel]? = nil, setupResults: [AttachmentPutModelAutoTestStepResultsModel]? = nil, teardownResults: [AttachmentPutModelAutoTestStepResultsModel]? = nil) {
        self.configurationId = configurationId
        self.links = links
        self.failureReasonNames = failureReasonNames
        self.autoTestExternalId = autoTestExternalId
        self.outcome = outcome
        self.message = message
        self.traces = traces
        self.startedOn = startedOn
        self.completedOn = completedOn
        self.duration = duration
        self.attachments = attachments
        self.parameters = parameters
        self.properties = properties
        self.stepResults = stepResults
        self.setupResults = setupResults
        self.teardownResults = teardownResults
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case configurationId
        case links
        case failureReasonNames
        case autoTestExternalId
        case outcome
        case message
        case traces
        case startedOn
        case completedOn
        case duration
        case attachments
        case parameters
        case properties
        case stepResults
        case setupResults
        case teardownResults
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(configurationId, forKey: .configurationId)
        try container.encodeIfPresent(links, forKey: .links)
        try container.encodeIfPresent(failureReasonNames, forKey: .failureReasonNames)
        try container.encode(autoTestExternalId, forKey: .autoTestExternalId)
        try container.encode(outcome, forKey: .outcome)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(traces, forKey: .traces)
        try container.encodeIfPresent(startedOn, forKey: .startedOn)
        try container.encodeIfPresent(completedOn, forKey: .completedOn)
        try container.encodeIfPresent(duration, forKey: .duration)
        try container.encodeIfPresent(attachments, forKey: .attachments)
        try container.encodeIfPresent(parameters, forKey: .parameters)
        try container.encodeIfPresent(properties, forKey: .properties)
        try container.encodeIfPresent(stepResults, forKey: .stepResults)
        try container.encodeIfPresent(setupResults, forKey: .setupResults)
        try container.encodeIfPresent(teardownResults, forKey: .teardownResults)
    }
}

