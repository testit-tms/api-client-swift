//
// PublicTestPointModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct PublicTestPointModel: Codable, JSONEncodable, Hashable {

    internal var configurationId: UUID
    internal var configurationGlobalId: Int64
    internal var autoTestIds: [UUID]?
    internal var iterationId: UUID
    internal var parameterModels: [ParameterShortModel]?
    internal var id: UUID

    internal init(configurationId: UUID, configurationGlobalId: Int64, autoTestIds: [UUID]? = nil, iterationId: UUID, parameterModels: [ParameterShortModel]? = nil, id: UUID) {
        self.configurationId = configurationId
        self.configurationGlobalId = configurationGlobalId
        self.autoTestIds = autoTestIds
        self.iterationId = iterationId
        self.parameterModels = parameterModels
        self.id = id
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case configurationId
        case configurationGlobalId
        case autoTestIds
        case iterationId
        case parameterModels
        case id
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(configurationId, forKey: .configurationId)
        try container.encode(configurationGlobalId, forKey: .configurationGlobalId)
        try container.encodeIfPresent(autoTestIds, forKey: .autoTestIds)
        try container.encode(iterationId, forKey: .iterationId)
        try container.encodeIfPresent(parameterModels, forKey: .parameterModels)
        try container.encode(id, forKey: .id)
    }
}

