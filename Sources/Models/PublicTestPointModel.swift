//
// PublicTestPointModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PublicTestPointModel: Codable, JSONEncodable, Hashable {

    public var configurationId: UUID
    public var configurationGlobalId: Int64
    public var autoTestIds: [UUID]?
    public var iterationId: UUID
    public var parameterModels: [ParameterShortModel]?
    public var id: UUID

    public init(configurationId: UUID, configurationGlobalId: Int64, autoTestIds: [UUID]? = nil, iterationId: UUID, parameterModels: [ParameterShortModel]? = nil, id: UUID) {
        self.configurationId = configurationId
        self.configurationGlobalId = configurationGlobalId
        self.autoTestIds = autoTestIds
        self.iterationId = iterationId
        self.parameterModels = parameterModels
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case configurationId
        case configurationGlobalId
        case autoTestIds
        case iterationId
        case parameterModels
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(configurationId, forKey: .configurationId)
        try container.encode(configurationGlobalId, forKey: .configurationGlobalId)
        try container.encodeIfPresent(autoTestIds, forKey: .autoTestIds)
        try container.encode(iterationId, forKey: .iterationId)
        try container.encodeIfPresent(parameterModels, forKey: .parameterModels)
        try container.encode(id, forKey: .id)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PublicTestPointModel: Identifiable {}
