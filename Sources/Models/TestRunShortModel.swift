//
// TestRunShortModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TestRunShortModel: Codable, JSONEncodable, Hashable {

    public var stateName: TestRunState
    public var projectId: UUID
    public var testPlanId: UUID?
    public var name: String?
    public var description: String?
    /** Unique ID of the entity */
    public var id: UUID
    /** Indicates if the entity is deleted */
    public var isDeleted: Bool

    public init(stateName: TestRunState, projectId: UUID, testPlanId: UUID? = nil, name: String? = nil, description: String? = nil, id: UUID, isDeleted: Bool) {
        self.stateName = stateName
        self.projectId = projectId
        self.testPlanId = testPlanId
        self.name = name
        self.description = description
        self.id = id
        self.isDeleted = isDeleted
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case stateName
        case projectId
        case testPlanId
        case name
        case description
        case id
        case isDeleted
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(stateName, forKey: .stateName)
        try container.encode(projectId, forKey: .projectId)
        try container.encodeIfPresent(testPlanId, forKey: .testPlanId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(id, forKey: .id)
        try container.encode(isDeleted, forKey: .isDeleted)
    }
}

