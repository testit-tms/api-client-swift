//
// TagApiResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TagApiResult: Codable, JSONEncodable, Hashable {

    /** ID of the tag */
    public var id: UUID
    /** Name of the tag */
    public var name: String
    /** Creation date of the tag */
    public var createdDate: Date
    /** ID of the user who created the tag */
    public var createdById: UUID
    /** Latest modification date of the tag */
    public var modifiedDate: Date?
    /** ID of the user who last modified the tag */
    public var modifiedById: UUID?

    public init(id: UUID, name: String, createdDate: Date, createdById: UUID, modifiedDate: Date? = nil, modifiedById: UUID? = nil) {
        self.id = id
        self.name = name
        self.createdDate = createdDate
        self.createdById = createdById
        self.modifiedDate = modifiedDate
        self.modifiedById = modifiedById
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case createdDate
        case createdById
        case modifiedDate
        case modifiedById
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(createdDate, forKey: .createdDate)
        try container.encode(createdById, forKey: .createdById)
        try container.encodeIfPresent(modifiedDate, forKey: .modifiedDate)
        try container.encodeIfPresent(modifiedById, forKey: .modifiedById)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension TagApiResult: Identifiable {}
