//
// TestSuiteTestPlanApiModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TestSuiteTestPlanApiModel: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: 0, maxLength: 255, pattern: nil)
    /** Test suite nane */
    public var name: String
    /** Configuration identifiers. Empty configurations means using default configurations */
    public var configurationIds: [UUID]?
    /** Type of the test suite */
    public var type: TestSuiteType?
    /** Indicates if the test suite retains section tree structure */
    public var saveStructure: Bool?
    /** Model containing options to filter work items */
    public var workItemsSelector: WorkItemSelectModel

    public init(name: String, configurationIds: [UUID]? = nil, type: TestSuiteType? = nil, saveStructure: Bool? = nil, workItemsSelector: WorkItemSelectModel) {
        self.name = name
        self.configurationIds = configurationIds
        self.type = type
        self.saveStructure = saveStructure
        self.workItemsSelector = workItemsSelector
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case configurationIds
        case type
        case saveStructure
        case workItemsSelector
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(configurationIds, forKey: .configurationIds)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(saveStructure, forKey: .saveStructure)
        try container.encode(workItemsSelector, forKey: .workItemsSelector)
    }
}

