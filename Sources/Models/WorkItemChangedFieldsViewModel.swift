//
// WorkItemChangedFieldsViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WorkItemChangedFieldsViewModel: Codable, JSONEncodable, Hashable {

    public var name: StringChangedFieldWithDiffsViewModel?
    public var isDeleted: BooleanChangedFieldViewModel
    public var projectId: GuidChangedFieldViewModel
    public var isAutomated: BooleanChangedFieldViewModel
    public var sectionId: GuidChangedFieldViewModel
    public var description: StringChangedFieldWithDiffsViewModel?
    public var state: StringChangedFieldViewModel
    public var priority: StringChangedFieldViewModel
    public var duration: Int32ChangedFieldViewModel
    public var attributes: [String: WorkItemChangedAttributeViewModel]
    public var steps: WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel
    public var preconditionSteps: WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel
    public var postconditionSteps: WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel
    public var autoTests: AutoTestChangeViewModelArrayChangedFieldViewModel
    public var attachments: AttachmentChangeViewModelArrayChangedFieldViewModel
    public var tags: StringArrayChangedFieldViewModel
    public var links: WorkItemLinkChangeViewModelArrayChangedFieldViewModel
    public var globalId: Int64ChangedFieldViewModel
    public var versionNumber: Int32ChangedFieldViewModel
    public var entityTypeName: StringChangedFieldViewModel

    public init(name: StringChangedFieldWithDiffsViewModel? = nil, isDeleted: BooleanChangedFieldViewModel, projectId: GuidChangedFieldViewModel, isAutomated: BooleanChangedFieldViewModel, sectionId: GuidChangedFieldViewModel, description: StringChangedFieldWithDiffsViewModel? = nil, state: StringChangedFieldViewModel, priority: StringChangedFieldViewModel, duration: Int32ChangedFieldViewModel, attributes: [String: WorkItemChangedAttributeViewModel], steps: WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel, preconditionSteps: WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel, postconditionSteps: WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel, autoTests: AutoTestChangeViewModelArrayChangedFieldViewModel, attachments: AttachmentChangeViewModelArrayChangedFieldViewModel, tags: StringArrayChangedFieldViewModel, links: WorkItemLinkChangeViewModelArrayChangedFieldViewModel, globalId: Int64ChangedFieldViewModel, versionNumber: Int32ChangedFieldViewModel, entityTypeName: StringChangedFieldViewModel) {
        self.name = name
        self.isDeleted = isDeleted
        self.projectId = projectId
        self.isAutomated = isAutomated
        self.sectionId = sectionId
        self.description = description
        self.state = state
        self.priority = priority
        self.duration = duration
        self.attributes = attributes
        self.steps = steps
        self.preconditionSteps = preconditionSteps
        self.postconditionSteps = postconditionSteps
        self.autoTests = autoTests
        self.attachments = attachments
        self.tags = tags
        self.links = links
        self.globalId = globalId
        self.versionNumber = versionNumber
        self.entityTypeName = entityTypeName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case isDeleted
        case projectId
        case isAutomated
        case sectionId
        case description
        case state
        case priority
        case duration
        case attributes
        case steps
        case preconditionSteps
        case postconditionSteps
        case autoTests
        case attachments
        case tags
        case links
        case globalId
        case versionNumber
        case entityTypeName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encode(isDeleted, forKey: .isDeleted)
        try container.encode(projectId, forKey: .projectId)
        try container.encode(isAutomated, forKey: .isAutomated)
        try container.encode(sectionId, forKey: .sectionId)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(state, forKey: .state)
        try container.encode(priority, forKey: .priority)
        try container.encode(duration, forKey: .duration)
        try container.encode(attributes, forKey: .attributes)
        try container.encode(steps, forKey: .steps)
        try container.encode(preconditionSteps, forKey: .preconditionSteps)
        try container.encode(postconditionSteps, forKey: .postconditionSteps)
        try container.encode(autoTests, forKey: .autoTests)
        try container.encode(attachments, forKey: .attachments)
        try container.encode(tags, forKey: .tags)
        try container.encode(links, forKey: .links)
        try container.encode(globalId, forKey: .globalId)
        try container.encode(versionNumber, forKey: .versionNumber)
        try container.encode(entityTypeName, forKey: .entityTypeName)
    }
}

