//
// TestRunByAutoTestApiResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TestRunByAutoTestApiResult: Codable, JSONEncodable, Hashable {

    /** Unique ID of the entity */
    public var id: UUID
    /** Indicates if the entity is deleted */
    public var isDeleted: Bool
    /** Test run state */
    @available(*, deprecated, message: "This property is deprecated.")
    public var stateName: TestRunState
    /** Test run status */
    public var status: TestStatusApiResult
    /** Project internal identifier */
    public var projectId: UUID
    /** Test plan internal identifier */
    public var testPlanId: UUID?
    /** Test run name */
    public var name: String?
    /** Test run description */
    public var description: String?

    public init(id: UUID, isDeleted: Bool, stateName: TestRunState, status: TestStatusApiResult, projectId: UUID, testPlanId: UUID? = nil, name: String? = nil, description: String? = nil) {
        self.id = id
        self.isDeleted = isDeleted
        self.stateName = stateName
        self.status = status
        self.projectId = projectId
        self.testPlanId = testPlanId
        self.name = name
        self.description = description
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case isDeleted
        case stateName
        case status
        case projectId
        case testPlanId
        case name
        case description
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(isDeleted, forKey: .isDeleted)
        try container.encode(stateName, forKey: .stateName)
        try container.encode(status, forKey: .status)
        try container.encode(projectId, forKey: .projectId)
        try container.encodeIfPresent(testPlanId, forKey: .testPlanId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension TestRunByAutoTestApiResult: Identifiable {}
